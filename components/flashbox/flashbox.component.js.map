{"version":3,"sources":["modules/commoncomponents/components/flashbox/flashbox.component.ts"],"names":[],"mappings":"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","file":"flashbox.component.js","sourcesContent":["import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs/Rx';\r\n\r\n@Component({\r\n    moduleId: module.id, //for commonjs pak\r\n    selector: 'flash-box',    \r\n    templateUrl: 'flashbox.component.html',\r\n    styleUrls: ['flashbox.component.css']\r\n})\r\nexport class FlashBoxComponent implements OnInit{\r\n   \r\n    private isShown: boolean = false;\r\n  \r\n    private _intervalCounterHandler: Observable<number>;\r\n    private _intervalCounterObserver: Subscription= null;    \r\n\r\n    //emit when flashbox start showing up\r\n    @Output(\"onStartVisibleEvent\") _onStartVisible = new EventEmitter();\r\n    //emit when flashbox is completely visible\r\n    @Output(\"onEndVisibleEvent\") _onEndVisible = new EventEmitter();\r\n    //emit when flashbox start dissapearing\r\n    @Output(\"onStartHiddenEvent\") _onStartHidden = new EventEmitter();\r\n    //emit when flashbox is hidden\r\n    @Output(\"onEndHiddenEvent\") private _onEndHidden = new EventEmitter();   \r\n    //emit when you try to start flashing flashbox that is already flashing\r\n    @Output(\"busyEvent\") _busy = new EventEmitter();\r\n    //setTimeout value must be greater than 0\r\n    @Output(\"invalidValueEvent\") _invalidValue = new EventEmitter();\r\n    //emit when control type change\r\n    @Output(\"onTypeChangedEvent\") _typeChanged = new EventEmitter<string>();\r\n    //emit when control position change\r\n    @Output(\"onPositionChangedEvent\") _positionChanged = new EventEmitter<string>();\r\n    //emit when control maxwidth change\r\n    @Output(\"onMaxWidthChangedEvent\") _maxWidthChanged = new EventEmitter<number>();\r\n    //emit when control timeout change\r\n    @Output(\"onTimeoutChangedEvent\") _timeoutChanged = new EventEmitter<number>();\r\n\r\n    private _type: string = \"primary\";\r\n    /**\r\n     * Set type of flashbox.\r\n     * Available values: \r\n     * default, primary, success, info, warning, danger\r\n     * Default value is primary. \r\n     */\r\n    @Input(\"type\")\r\n    set type(value: string){\r\n        this._type = value;\r\n        this._typeChanged.emit(value);\r\n        this.setType();\r\n    }\r\n   \r\n    private _position: string = \"tr\";\r\n     /**\r\n     * Set position of flashbox.\r\n     * Available values:\r\n     * tr - top-right,\r\n     * tm - top-middle,\r\n     * tl - top-left,\r\n     * cr - center-right,\r\n     * cm - center-middle,\r\n     * cl - center-left,\r\n     * br - bottom-right,\r\n     * bm - bottom-middle,\r\n     * bl - bottom-left\r\n     * Default value is tr. \r\n     */\r\n    @Input(\"position\")\r\n    set position(value: string){\r\n        this._position = value;\r\n        this._positionChanged.emit(value);\r\n        this.setPosition();\r\n    }\r\n    \r\n    private _maxwidth: number = 300;\r\n    /**\r\n     * Specify flashbox maximum width.\r\n     * Default value is 300 px.\r\n     */\r\n    @Input(\"maxwidth\")\r\n    set maxwidth(value: number){\r\n        this._maxwidth = value;\r\n        this._maxWidthChanged.emit(value);\r\n    }\r\n    \r\n    private _setTimeout: number = 2000;    \r\n    /**\r\n     * Specify the amount of time flashbox is visible in ms. Default value is 2000ms.\r\n     */\r\n    @Input(\"setTimeout\")\r\n    set setTimeout(value : number){\r\n        this._setTimeout = value;\r\n        this._timeoutChanged.emit(value);      \r\n    }\r\n\r\n    private style_type: boolean[] = [false, false, false, false, false, false];\r\n\r\n    private style_position: boolean[] = [false, false, false, false, false, false, false, false, false];\r\n\r\n    constructor(){\r\n        /*\r\n        //subscribe to events\r\n        this._onStartVisible.subscribe(()=>{\r\n            console.log(\"_onStartVisible event fired\");\r\n        });\r\n        this._onEndVisible.subscribe(()=>{\r\n            console.log(\"_onEndVisible event fired\");\r\n        });\r\n        this._onStartHidden.subscribe(()=>{\r\n            console.log(\"_onStartHidden event fired\");\r\n        });\r\n        this._onEndHidden.subscribe(()=>{\r\n            console.log(\"_onEndHidden event fired\");      \r\n        this._busy.subscribe(()=>{\r\n            console.log(\"_busy event fired\");\r\n        });\r\n        this._typeChanged.subscribe((new_val:any)=>{\r\n            console.log(\"Type changed to: \"+new_val);\r\n        });\r\n        this._positionChanged.subscribe((new_val:any)=>{\r\n            console.log(\"Position changed to :\"+new_val);\r\n        });\r\n        this._maxWidthChanged.subscribe((new_val:any)=>{\r\n            console.log(\"Max width changed to :\"+new_val);\r\n        });\r\n        this._timeoutChanged.subscribe((new_val:any)=>{\r\n            console.log(\"Timeout changed to :\"+new_val);\r\n        });*/\r\n\r\n        console.log(\"FlashBoxComponent v0.2.6\")\r\n    }\r\n\r\n    ngOnInit(){\r\n        this.setType();\r\n        this.setPosition();\r\n    }    \r\n\r\n    private setType(): void{\r\n        switch(this._type){\r\n            case \"default\":\r\n            {            \r\n                this.style_type= [true, false, false, false, false, false];\r\n                break;\r\n            };\r\n            case \"primary\":\r\n            {\r\n                this.style_type= [false, true, false, false, false, false];                \r\n                break;\r\n            };\r\n            case \"success\":\r\n            {\r\n                this.style_type= [false, false, true, false, false, false];                \r\n                break;\r\n            };\r\n            case \"info\":\r\n            {\r\n                this.style_type= [false, false, false, true, false, false];                \r\n                break;\r\n            };\r\n            case \"warning\":\r\n            {\r\n                this.style_type= [false, false, false, false, true, false];               \r\n                break;                \r\n            };\r\n            case \"danger\":\r\n            {\r\n                this.style_type= [false, false, false, false, false, true];               \r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    private setPosition(): void{\r\n        switch(this._position){\r\n            case \"tr\":{\r\n                this.style_position= [true, false, false, false, false, false, false, false, false];               \r\n                break;\r\n            };\r\n            case \"tm\":{\r\n                this.style_position= [false, true, false, false, false, false, false, false, false];                             \r\n                break;\r\n            };\r\n            case \"tl\":{\r\n                this.style_position= [false, false, true, false, false, false, false, false, false];                \r\n                break;\r\n            };\r\n            case \"cr\":{\r\n                this.style_position= [false, false, false, true, false, false, false, false, false];                \r\n                break;\r\n            };\r\n            case \"cm\":{\r\n                 this.style_position= [false, false, false, false, true, false, false, false, false];              \r\n                break;\r\n            };\r\n            case \"cl\":{\r\n                this.style_position= [false, false, false, false, false, true, false, false, false];                \r\n                break;\r\n            };\r\n            case \"br\":{\r\n                this.style_position= [false, false, false, false, false, false, true, false, false];                \r\n                break;\r\n            };\r\n            case \"bm\":{\r\n                this.style_position= [false, false, false, false, false, false, false, true, false];                 \r\n                break;\r\n            };\r\n            case \"bl\":{\r\n                this.style_position= [false, false, false, false, false, false, false, false, true];                 \r\n                break;\r\n            };\r\n        }\r\n    }\r\n    /**\r\n     * Use this method to toggle(show/hide) flashbox.\r\n     */\r\n    public toggle(): void{\r\n        if(this.isShown) this.hide();\r\n        else this.show();\r\n    }        \r\n    /**\r\n     * Use this method to show flashbox.\r\n     * Flashbox will be visible until hide() method is called.\r\n     */\r\n    public show(): void{              \r\n        if(this.isShown){    \r\n            console.error(\"FlashBox component is already shown\");                                   \r\n            this._busy.emit();\r\n            return;\r\n        }            \r\n\r\n        this._onStartVisible.emit();\r\n        this.isShown=true;\r\n        setTimeout(()=>{\r\n             this._onEndVisible.emit();\r\n        }, 500);        \r\n\r\n    }\r\n    /**\r\n     * Use this method to hide flashbox.\r\n     * Flashbox will be hidden until show() method is called.\r\n     */\r\n    public hide(): void{  \r\n\r\n        if(!this.isShown){  \r\n            console.error(\"FlashBox component is already hidden\");         \r\n            this._busy.emit();\r\n            return;\r\n        }      \r\n       \r\n        this._onStartHidden.emit();\r\n        this.isShown=false;\r\n        setTimeout(()=>{\r\n              this._onEndHidden.emit();\r\n        },500);\r\n           \r\n    }\r\n     /**\r\n     * Use this method to show flashbox only once.\r\n     * Flashbox will appear and then disappear.\r\n     */   \r\n    public flashOnce(): void{\r\n        //if flashbox is flashing or visible emit busy event       \r\n        if( (this._intervalCounterObserver!=null && !this._intervalCounterObserver.closed) || this.isShown ){\r\n            console.error(\"FlashBox component is either shown or flashing\");           \r\n            this._busy.emit();\r\n            return;\r\n        }            \r\n             \r\n        this.show();\r\n        setTimeout(()=>this.hide(), this._setTimeout);      \r\n    }\r\n    /**\r\n     * Use this method to start flashbox flashing.\r\n     * FlashBox will be flashing until stopFlashing() method is called.\r\n     */\r\n    public startFlashing(): void{\r\n         //if flashbox is flashing or visible emit busy event       \r\n        if( (this._intervalCounterObserver!=null && !this._intervalCounterObserver.closed) || this.isShown ){\r\n            console.error(\"FlashBox component is either shown or flashing\");           \r\n            this._busy.emit();\r\n            return;\r\n        }            \r\n                             \r\n        //this._intervalCounterHandler=Observable.timer(0, parseInt(this._setTimeout)+1000);\r\n        this._intervalCounterHandler=Observable.timer(0, this._setTimeout+1000);        \r\n        this._intervalCounterObserver=this._intervalCounterHandler.subscribe((num)=>{\r\n            this.toggle();\r\n        });           \r\n    }\r\n    /**\r\n     * Use this method to stop flashbox flashing.\r\n     * FlashBox will be stopped until startFlashing() method is called.\r\n     */\r\n    public stopFlashing(): void{       \r\n       this._intervalCounterObserver.unsubscribe();\r\n       this.isShown=false;\r\n    }\r\n\r\n    /**\r\n     * Use this method to start flashbox flashing for predefined number of times. \r\n     */\r\n    public flashTimes(times: number): void{\r\n        if(times < 0)\r\n        {\r\n            //invalid value\r\n            console.error(\"Value must be greater than 0\");\r\n            this._invalidValue.emit();\r\n            return;\r\n        }\r\n        //if already blinking or shown do nothing\r\n        //message must be hidden to start flashing\r\n         if( (this._intervalCounterObserver!=null && !this._intervalCounterObserver.closed) || this.isShown ){\r\n            console.error(\"FlashBox component is either shown or flashing\");           \r\n            this._busy.emit();\r\n            return;\r\n        }            \r\n\r\n        //this._intervalCounterHandler=Observable.timer(0, parseInt(this._setTimeout)+1000);\r\n        this._intervalCounterHandler=Observable.timer(0, this._setTimeout+1000);       \r\n        this._intervalCounterObserver=this._intervalCounterHandler.subscribe((num)=>{\r\n            if(num != times*2){\r\n               // console.log(num);\r\n                this.toggle();\r\n            }\r\n            else{\r\n                this._intervalCounterObserver.unsubscribe();\r\n            }\r\n        });           \r\n    }\r\n\r\n\r\n}"]}