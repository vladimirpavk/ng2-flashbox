{"version":3,"sources":["modules/commoncomponents/components/flashbox/flashbox.component.ts"],"names":[],"mappings":"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","file":"flashbox.component.js","sourcesContent":["import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs/Rx';\r\n\r\nlet __moduleName: any;\r\n\r\n@Component({\r\n    moduleId: __moduleName,\r\n    selector: 'flash-box',    \r\n    templateUrl: 'flashbox.component.html',\r\n    styleUrls: ['flashbox.component.css']\r\n})\r\nexport class FlashBoxComponent implements OnInit{\r\n   \r\n    private isShown: boolean = false;\r\n  \r\n    private _intervalCounterHandler: Observable<number>;\r\n    private _intervalCounterObserver: Subscription= null;    \r\n\r\n    //emit when flashbox start showing up\r\n    @Output(\"onStartVisibleEvent\") _onStartVisible = new EventEmitter();\r\n    //emit when flashbox is completely visible\r\n    @Output(\"onEndVisibleEvent\") _onEndVisible = new EventEmitter();\r\n    //emit when flashbox start dissapearing\r\n    @Output(\"onStartHiddenEvent\") _onStartHidden = new EventEmitter();\r\n    //emit when flashbox is hidden\r\n    @Output(\"onEndHiddenEvent\") private _onEndHidden = new EventEmitter();   \r\n    //emit when you try to start flashing flashbox that is already flashing\r\n    @Output(\"busyEvent\") _busy = new EventEmitter();\r\n    //setTimeout value must be greater than 0\r\n    @Output(\"invalidValueEvent\") _invalidValue = new EventEmitter();\r\n\r\n    private _type: string = \"primary\";\r\n    /**\r\n     * Set type of flashbox.\r\n     * Available values: \r\n     * default, primary, success, info, warning, danger\r\n     * Default value is primary. \r\n     */\r\n    @Input(\"type\")\r\n    set type(value: string){\r\n        this._type= value;\r\n        this.setType();\r\n    }\r\n   \r\n    private _position: string = \"tr\";\r\n     /**\r\n     * Set position of flashbox.\r\n     * Available values:\r\n     * tr - top-right,\r\n     * tm - top-middle,\r\n     * tl - top-left,\r\n     * cr - center-right,\r\n     * cm - center-middle,\r\n     * cl - center-left,\r\n     * br - bottom-right,\r\n     * bm - bottom-middle,\r\n     * bl - bottom-left\r\n     * Default value is tr. \r\n     */\r\n    @Input(\"position\")\r\n    set position(value: string){\r\n        this._position= value;\r\n        this.setPosition();\r\n    }\r\n    \r\n    private _maxwidth: string = \"300px\";\r\n    /**\r\n     * Specify flashbox maximum width.\r\n     * Default value is 300 px.\r\n     */\r\n    @Input(\"maxwidth\")\r\n    set maxwidth(value: string){\r\n        this._maxwidth= value;\r\n    }\r\n    \r\n    private _setTimeout: number = 2000;    \r\n    /**\r\n     * Specify the amount of time flashbox is visible in ms. Default value is 2000ms.\r\n     */\r\n    @Input(\"setTimeout\")\r\n    set setTimeout(value : number){\r\n        this._setTimeout= value;      \r\n    }\r\n\r\n    private style_type: boolean[] = [false, false, false, false, false, false];\r\n\r\n    private style_position: boolean[] = [false, false, false, false, false, false, false, false, false];\r\n\r\n    constructor(){\r\n        /*\r\n        //subscribe to events\r\n        this._onStartVisible.subscribe(()=>{\r\n            console.log(\"_onStartVisible event fired\");\r\n        });\r\n        this._onEndVisible.subscribe(()=>{\r\n            console.log(\"_onEndVisible event fired\");\r\n        });\r\n        this._onStartHidden.subscribe(()=>{\r\n            console.log(\"_onStartHidden event fired\");\r\n        });\r\n        this._onEndHidden.subscribe(()=>{\r\n            console.log(\"_onEndHidden event fired\");      \r\n        this._busy.subscribe(()=>{\r\n            console.log(\"_busy event fired\");\r\n        });*/        \r\n        console.log(\"FlashBoxComponent v0.2.1\")\r\n    }\r\n\r\n    ngOnInit(){\r\n        this.setType();\r\n        this.setPosition();\r\n    }    \r\n\r\n    private setType(): void{\r\n        switch(this._type){\r\n            case \"default\":\r\n            {            \r\n                this.style_type= [true, false, false, false, false, false];\r\n                break;\r\n            };\r\n            case \"primary\":\r\n            {\r\n                this.style_type= [false, true, false, false, false, false];                \r\n                break;\r\n            };\r\n            case \"success\":\r\n            {\r\n                this.style_type= [false, false, true, false, false, false];                \r\n                break;\r\n            };\r\n            case \"info\":\r\n            {\r\n                this.style_type= [false, false, false, true, false, false];                \r\n                break;\r\n            };\r\n            case \"warning\":\r\n            {\r\n                this.style_type= [false, false, false, false, true, false];               \r\n                break;                \r\n            };\r\n            case \"danger\":\r\n            {\r\n                this.style_type= [false, false, false, false, false, true];               \r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    private setPosition(): void{\r\n        switch(this._position){\r\n            case \"tr\":{\r\n                this.style_position= [true, false, false, false, false, false, false, false, false];               \r\n                break;\r\n            };\r\n            case \"tm\":{\r\n                this.style_position= [false, true, false, false, false, false, false, false, false];                             \r\n                break;\r\n            };\r\n            case \"tl\":{\r\n                this.style_position= [false, false, true, false, false, false, false, false, false];                \r\n                break;\r\n            };\r\n            case \"cr\":{\r\n                this.style_position= [false, false, false, true, false, false, false, false, false];                \r\n                break;\r\n            };\r\n            case \"cm\":{\r\n                 this.style_position= [false, false, false, false, true, false, false, false, false];              \r\n                break;\r\n            };\r\n            case \"cl\":{\r\n                this.style_position= [false, false, false, false, false, true, false, false, false];                \r\n                break;\r\n            };\r\n            case \"br\":{\r\n                this.style_position= [false, false, false, false, false, false, true, false, false];                \r\n                break;\r\n            };\r\n            case \"bm\":{\r\n                this.style_position= [false, false, false, false, false, false, false, true, false];                 \r\n                break;\r\n            };\r\n            case \"bl\":{\r\n                this.style_position= [false, false, false, false, false, false, false, false, true];                 \r\n                break;\r\n            };\r\n        }\r\n    }\r\n    /**\r\n     * Use this method to toggle(show/hide) flashbox.\r\n     */\r\n    public toggle(): void{\r\n        if(this.isShown) this.hide();\r\n        else this.show();\r\n    }        \r\n    /**\r\n     * Use this method to show flashbox.\r\n     * Flashbox will be visible until hide() method is called.\r\n     */\r\n    public show(): void{              \r\n        if(this.isShown){    \r\n            console.error(\"FlashBox component is already shown\");                                   \r\n            this._busy.emit();\r\n            return;\r\n        }            \r\n\r\n        this._onStartVisible.emit();\r\n        this.isShown=true;\r\n        setTimeout(()=>{\r\n             this._onEndVisible.emit();\r\n        }, 500);        \r\n\r\n    }\r\n    /**\r\n     * Use this method to hide flashbox.\r\n     * Flashbox will be hidden until show() method is called.\r\n     */\r\n    public hide(): void{  \r\n\r\n        if(!this.isShown){  \r\n            console.error(\"FlashBox component is already hidden\");         \r\n            this._busy.emit();\r\n            return;\r\n        }      \r\n       \r\n        this._onStartHidden.emit();\r\n        this.isShown=false;\r\n        setTimeout(()=>{\r\n              this._onEndHidden.emit();\r\n        },500);\r\n           \r\n    }\r\n     /**\r\n     * Use this method to show flashbox only once.\r\n     * Flashbox will appear and then disappear.\r\n     */   \r\n    public flashOnce(): void{\r\n        //if flashbox is flashing or visible emit busy event       \r\n        if( (this._intervalCounterObserver!=null && !this._intervalCounterObserver.closed) || this.isShown ){\r\n            console.error(\"FlashBox component is either shown or flashing\");           \r\n            this._busy.emit();\r\n            return;\r\n        }            \r\n             \r\n        this.show();\r\n        setTimeout(()=>this.hide(), this._setTimeout);      \r\n    }\r\n    /**\r\n     * Use this method to start flashbox flashing.\r\n     * FlashBox will be flashing until stopFlashing() method is called.\r\n     */\r\n    public startFlashing(): void{\r\n         //if flashbox is flashing or visible emit busy event       \r\n        if( (this._intervalCounterObserver!=null && !this._intervalCounterObserver.closed) || this.isShown ){\r\n            console.error(\"FlashBox component is either shown or flashing\");           \r\n            this._busy.emit();\r\n            return;\r\n        }            \r\n                             \r\n        this._intervalCounterHandler=Observable.timer(0, parseInt(this._setTimeout)+1000);        \r\n        this._intervalCounterObserver=this._intervalCounterHandler.subscribe((num)=>{\r\n            this.toggle();\r\n        });           \r\n    }\r\n    /**\r\n     * Use this method to stop flashbox flashing.\r\n     * FlashBox will be stopped until startFlashing() method is called.\r\n     */\r\n    public stopFlashing(): void{       \r\n       this._intervalCounterObserver.unsubscribe();\r\n       this.isShown=false;\r\n    }\r\n\r\n    /**\r\n     * Use this method to start flashbox flashing for predefined number of times. \r\n     */\r\n    public flashTimes(times: number): void{\r\n        if(times < 0)\r\n        {\r\n            //invalid value\r\n            console.error(\"Value must be greater than 0\");\r\n            this._invalidValue.emit();\r\n            return;\r\n        }\r\n        //if already blinking or shown do nothing\r\n        //message must be hidden to start flashing\r\n         if( (this._intervalCounterObserver!=null && !this._intervalCounterObserver.closed) || this.isShown ){\r\n            console.error(\"FlashBox component is either shown or flashing\");           \r\n            this._busy.emit();\r\n            return;\r\n        }            \r\n\r\n        this._intervalCounterHandler=Observable.timer(0, parseInt(this._setTimeout)+1000);        \r\n        this._intervalCounterObserver=this._intervalCounterHandler.subscribe((num)=>{\r\n            if(num != times*2){\r\n               // console.log(num);\r\n                this.toggle();\r\n            }\r\n            else{\r\n                this._intervalCounterObserver.unsubscribe();\r\n            }\r\n        });           \r\n    }\r\n\r\n\r\n}"]}